left_join(x, y, by = "key")
weather
flights2 %>% left_join(weather)  # how does this join? no key defined!
flights2 %>% left_join(planes)  # how does this join? no key defined!
flights2 %>% left_join(planes, by ="tailnum")
flights2 %>% left_join(airports)
flights2 %>% left_join(airports, by = c("dest", "faa"))
flights2 %>% left_join(airports, by = c("dest" = "faa"))  # notice the syntax!!
flights2 %>% left_join(airports, c("origin" = "faa"))
# semi-join.
#   discard rows that don't have a match, but don't import any new columns.
airports
airports %>%
semi_join(flights, c("faa" = "dest"))
# anti-join.
#   discard rows that DO have a match.
flights %>%
anti_join(planes, by = "tailnum") %>%
count(tailnum, sort = TRUE)
flights2 %>% left_join(airports, c("origin" == "faa"))
flights2 %>% left_join(airports, c("origin" = "faa"))
# From
# https://socviz.co/makeplot.html#mappings-link-data-to-things-you-see
# https://socviz.co/assets/ch-03-ggplot-formula-schematic.png
install.packages("gapminder")
library(gapminder)
gapminder
p <- ggplot(data = gapminder)
library(ggplot2)
p <- ggplot(data = gapminder)
# The mapping = aes(...) argument links variables to things you will see on the plot.
# The x and y values are the most obvious ones.
# Other aesthetic mappings can include, for example, color, shape, size, and
# line type (whether a line is solid or dashed, or some other pattern). We'll
# see examples in a minute. A mapping does not directly say what particular,
# e.g., colors or shapes will be on the plot. Rather they say which variables
# in the data will be represented by visual elements like
# a color, a shape, or a point on the plot area.
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))
# make the plot (it is still boring!)
p
p + geom_point()
p
p + geom_smooth()
p + geom_point() + geom_smooth()
p + geom_point() + geom_smooth(method = "lm")
p + geom_point() +
geom_smooth(method = "gam") +
scale_x_log10()
p + geom_point() +
geom_smooth(method = "gam") +
scale_x_log10(labels = scales::dollar)
p <-  ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = continent))
p + geom_point() +
geom_smooth(method = "loess") +
scale_x_log10(labels = scales::dollar)
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(mapping = aes(color = continent)) +
geom_smooth(method = "loess") +
scale_x_log10(labels = scales::dollar)
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(alpha = 0.3) +
geom_smooth(color = "orange", se = FALSE, size = 8, method = "lm") +
scale_x_log10(labels = scales::dollar)
p + geom_point(alpha = 0.3) +
geom_smooth(color = "orange", se = FALSE, size = 2, method = "lm") +
scale_x_log10(labels = scales::dollar)
# Figure 3.13: A more polished plot of Life Expectancy vs GDP.
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y=lifeExp))
p + geom_point(alpha = 0.3) +
geom_smooth(method = "gam") +
scale_x_log10(labels = scales::dollar) +
labs(x = "GDP Per Capita", y = "Life Expectancy in Years",
title = "Economic Growth and Life Expectancy",
subtitle = "Data points are country-years",
caption = "Source: Gapminder.")
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(mapping = aes(color = log(pop))) +
scale_x_log10(labels = scales::dollar)
#  vs
p + geom_point(mapping = aes(size = log10(pop))) +
scale_x_log10(labels = scales::dollar)
#  vs
p + geom_point(mapping = aes(alpha = log10(pop))) +
scale_x_log10(labels = scales::dollar)
#  vs
p + geom_point(mapping = aes(size = log10(pop)), alpha=.2) +
scale_x_log10(labels = scales::dollar)
p + geom_point(mapping = aes(color = log(pop))) +
scale_x_log10(labels = scales::dollar)
p + geom_point(mapping = aes(color = log(pop)), alpha = .2) +
scale_x_log10(labels = scales::dollar)
p
p + geom_point(mapping = aes(color = log(pop))) +
scale_x_log10(labels = scales::dollar)
p + geom_point(mapping = aes(color = log10(pop))) +
scale_x_log10(labels = scales::dollar)
p + geom_point(mapping = aes(color = log10(pop))) +
scale_x_log10(labels = scales::dollar) + facet_wrap(.~pop)
p + geom_point() +
scale_x_log10(labels = scales::dollar) + facet_wrap(.~pop)
p + geom_point() +
scale_x_log10(labels = scales::dollar) + facet_wrap(.~pop)
p + geom_point() +
scale_x_log10(labels = scales::dollar)
p + geom_point() +
scale_x_log10(labels = scales::dollar)
library(ggplot2)
library(dplyr)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
mpg %>%  ggplot +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(.~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(.~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(class ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(.~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(~ class)
library(tidyr)
library(dplyr)
library(ggplot2)
library(nycflights13)
planes
flights
planes
flights
flights2 <- flights %>%
select(tailnum, arr_delay)
flights %>%
left_join(airlines, by = "carrier")
planes
flights2 %>%
left_join(planes, by = "tailnum")
planes2 = planes %>% select(tailnum, year)
flights2 %>%
left_join(planes2, by = "tailnum")
flights
library(tidyr)
library(dplyr)
library(ggplot2)
library(nycflights13)
flights
flights %>%
group_by(month, day) %>%
summarise(EWR = sum(origin == "EWR"),
LGA = sum(origin == "LGA"),
JFK = sum(origin == "JFK")) %>%
mutate(month, day, EWR, LGA, JFK)
flights %>%
group_by(month, day) %>%
summarise(EWR = sum(origin == "EWR"),
LGA = sum(origin == "LGA"),
JFK = sum(origin == "JFK"), .groups = 'keep') %>%
mutate(month, day, EWR, LGA, JFK)
library(tidyr)
library(dplyr)
library(ggplot2)
library(nycflights13)
flights %>%
group_by(month, day) %>%
summarise(EWR = sum(origin == "EWR"),
LGA = sum(origin == "LGA"),
JFK = sum(origin == "JFK"), .groups = 'keep') %>%
mutate(month, day, EWR, LGA, JFK)
library(tidyr)
library(dplyr)
library(ggplot2)
library(nycflights13)
planes
flights
flights2 <- flights %>%
select(tailnum, arr_delay)
planes2 = planes %>% select(tailnum, year)
flights %>%
left_join(airlines, by = "carrier")
flights2 %>%
left_join(planes2, by = "tailnum")
flights %>%
group_by(month, day) %>%
summarise(EWR = sum(origin == "EWR"),
LGA = sum(origin == "LGA"),
JFK = sum(origin == "JFK"), .groups = 'keep') %>%
mutate(month, day, EWR, LGA, JFK)
pr3 = flights %>%
mutate(day_of_year = date(time_hour)) %>%
group_by(day_of_year, dest) %>%
summarise(num_arr = sum(!is.na(arr_time))) %>%
pivot_wider(names_from = dest, values_from = num_arr, values_fill = list(num_arr=0))
head(pr3)
flights %>%
group_by(tailnum) %>%
summarise(mean_arr_ delay = mean(arr_delay, na.rm = T))
lights %>%
group_by(tailnum) %>%
summarise(mean_arr_delay = mean(arr_delay, na.rm = T))
flights %>%
group_by(tailnum) %>%
summarise(mean_arr_delay = mean(arr_delay, na.rm = T)) %>%
left_join(planes, by = c("")) %>%
select(tailnum:year)
flights %>%
group_by(tailnum) %>%
summarise(mean_arr_delay = mean(arr_delay, na.rm = T)) %>%
left_join(planes) %>%
select(tailnum:year)
flights %>%
group_by(tailnum) %>%
summarise(mean_arr_delay = mean(arr_delay, na.rm = T)) %>%
left_join(planes) %>%
select(tailnum:year)
pr1 = flights %>%
group_by(tailnum) %>%
summarise(mean_arr_delay = mean(arr_delay, na.rm = T)) %>%
left_join(planes) %>%
select(tailnum:year)
head(pr1)
head(pr1, n = 10)
planes
flights
flights2 <- flights %>%
select(tailnum, arr_delay)
planes2 = planes %>% select(tailnum, year)
flights %>%
left_join(airlines, by = "carrier")
flights2 %>%
left_join(planes2, by = "tailnum")
flights %>%
group_by(origin, day, month) %>%
summarise(deps = n()) %>%
pivot_wider(names_from = origin, values_from = deps)
flights %>%
group_by(origin, month, day) %>%
summarise(EWR = sum(origin == "EWR"),
LGA = sum(origin == "LGA"),
JFK = sum(origin == "JFK"), .groups = 'keep') %>%
mutate(month, day, EWR, LGA, JFK)
flights %>%
group_by(month, day) %>%
summarise(EWR = sum(origin == "EWR"),
LGA = sum(origin == "LGA"),
JFK = sum(origin == "JFK"), .groups = 'keep') %>%
mutate(month, day, EWR, LGA, JFK)
flights %>%
group_by(origin, month, day) %>%
summarise(deps = n()) %>%
pivot_wider(names_from = origin, values_from = deps)
flights %>% filter(origin == "LGA", month == 1,day == 3)
flights %>%
group_by(origin, month, day) %>%
summarise(deps = n()) %>%
pivot_wider(names_from = origin, values_from = deps)
flights %>%
group_by(month, day) %>%
summarise(EWR = sum(origin == "EWR"),
LGA = sum(origin == "LGA"),
JFK = sum(origin == "JFK"), .groups = 'keep') %>%
mutate(month, day, EWR, JFK, LGA)
flights %>%
group_by(month, day) %>%
summarise(EWR = sum(origin == "EWR"),
JFK = sum(origin == "JFK"),
LGA = sum(origin == "LGA"),
.groups = 'keep') %>%
mutate(month, day, EWR, JFK, LGA)
flights %>%
mutate(date = as.Date(time_hour)) %>%
group_by(origin, date) %>%
summarise(deps = n()) %>%
pivot_wider(names_from = origin, values_from = deps)
flights %>% filter(origin == "LGA", month == 1,day == 3) # checking it is accurate
pr3 = flights %>%
mutate(day_of_year = date(time_hour)) %>%
group_by(day_of_year, dest) %>%
summarise(num_arr = sum(!is.na(arr_time))) %>%
pivot_wider(names_from = dest, values_from = num_arr, values_fill = list(num_arr=0))
pr3 = flights %>%
mutate(day_of_year = as.Date(time_hour)) %>%
group_by(day_of_year, dest) %>%
summarise(num_arr = sum(!is.na(arr_time))) %>%
pivot_wider(names_from = dest, values_from = num_arr, values_fill = list(num_arr=0))
head(pr3)
pr3 = flights %>%
mutate(date = as.Date(time_hour)) %>%
group_by(dest, date) %>%
summarise(num_arr = sum(!is.na(arr_time))) %>%
pivot_wider(names_from = dest, values_from = num_arr, values_fill = list(num_arr=0))
head(pr3)
View(pr3)
pr3 = flights %>%
mutate(date = as.Date(time_hour)) %>%
group_by(date, dest) %>%
summarise(num_arr = sum(!is.na(arr_time))) %>%
pivot_wider(names_from = dest, values_from = num_arr, values_fill = list(num_arr=0))
head(pr3)
flights %>%
mutate(date = as.Date(time_hour)) %>%
group_by(origin, date) %>%
summarise(deps = n()) %>%
pivot_wider(names_from = origin, values_from = deps)
flights %>% filter(day == 1, month== 1, dest == "ALB")
pr3 = flights %>%
mutate(date = as.Date(time_hour)) %>%
group_by(date, dest) %>%
summarise(num_arr = sum(!is.na(arr_time))) %>%
pivot_wider(names_from = dest, values_from = num_arr, values_fill = list(num_arr = 0))
head(pr3, n = 10)
pr1 = flights %>%
group_by(tailnum) %>%
summarise(mean_arr_delay = mean(arr_delay, na.rm = T)) %>%
left_join(planes) %>%
select(tailnum:year)
head(pr1, n = 10)
pr2 = flights %>%
mutate(date = as.Date(time_hour)) %>%
group_by(origin, date) %>%
summarise(deps = n()) %>%
pivot_wider(names_from = origin, values_from = deps)
head(pr2, n = 10)
pr2 = flights %>%
mutate(date = as.Date(time_hour)) %>%
group_by(origin, date) %>%
summarise(deps = n(), .groups = 'keep') %>%
pivot_wider(names_from = origin, values_from = deps)
head(pr2, n = 10)
pr3 = flights %>%
mutate(date = as.Date(time_hour)) %>%
group_by(date, dest) %>%
summarise(num_arr = sum(!is.na(arr_time))) %>%
pivot_wider(names_from = dest, values_from = num_arr, values_fill = list(num_arr = 0))
head(pr3, n = 10)
pr3 = flights %>%
mutate(date = as.Date(time_hour)) %>%
group_by(date, dest) %>%
summarise(num_arr = sum(!is.na(arr_time)), .groups = 'keep') %>%
pivot_wider(names_from = dest, values_from = num_arr, values_fill = list(num_arr = 0))
head(pr3, n = 10)
flight_weather <-
flights %>%
inner_join(weather, by = c(
"origin" = "origin",
"year" = "year",
"month" = "month",
"day" = "day",
"hour" = "hour"
))
library(tidyr)
library(dplyr)
library(ggplot2)
library(nycflights13)
flight_weather <-
flights %>%
inner_join(weather, by = c(
"origin" = "origin",
"year" = "year",
"month" = "month",
"day" = "day",
"hour" = "hour"
))
flight_weather %>%
group_by(precip) %>%
summarise(delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot(aes(x = precip, y = delay)) +
geom_line() + geom_point()
flight_weather %>%
ungroup() %>%
mutate(visib_cat = cut_interval(visib, n = 10)) %>%
group_by(visib_cat) %>%
summarise(dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot(aes(x = visib_cat, y = dep_delay)) +
geom_point()
View(flights)
View(weather)
library(tidyr)
library(dplyr)
library(ggplot2)
library(nycflights13)
flight_weather <-
flights %>%
inner_join(weather, by = c(
"origin" = "origin",
"year" = "year",
"month" = "month",
"day" = "day",
"hour" = "hour"
))
View(flight_weather)
flight_weather %>%
group_by(precip) %>%
summarise(delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot(aes(x = precip, y = delay)) +
geom_line() + geom_point()
flight_weather %>%
group_by(precip) %>%
summarise(delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot(aes(x = precip, y = delay)) +
geom_line()
flight_weather %>%
group_by(precip) %>%
summarise(delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot(aes(x = precip, y = delay)) +
geom_line() + geom_point()
ggplot(flight_weather) + geom_point(aes(dep_time, precip)) + facet_grid(delay)
flight_weather %>%
group_by(precip) %>%
summarise(delay = mean(dep_delay, na.rm = TRUE))
ggplot(flight_weather, aes(x = precip, y = delay)) +
geom_line() + geom_point()
flight_weather = flight_weather %>%
group_by(precip) %>%
summarise(delay = mean(dep_delay, na.rm = TRUE))
ggplot(flight_weather, aes(x = precip, y = delay)) +
geom_line() + geom_point()
ggplot(flight_weather) + geom_point(aes(dep_time, precip)) + facet_grid(delay)
ggplot(flight_weather) + geom_point(aes(dep_time, precip))
ggplot(flight_weather) + geom_point(aes(dep_time, precip))
flight_weather = flight_weather %>%
group_by(precip) %>%
mutate(delay = mean(dep_delay, na.rm = TRUE))
flight_weather <-
flights %>%
inner_join(weather, by = c(
"origin" = "origin",
"year" = "year",
"month" = "month",
"day" = "day",
"hour" = "hour"
))
flight_weather = flight_weather %>%
group_by(precip) %>%
mutate(delay = mean(dep_delay, na.rm = TRUE))
ggplot(flight_weather, aes(x = precip, y = delay)) +
geom_line() + geom_point()
ggplot(flight_weather) + geom_point(aes(dep_time, precip))
ggplot(flight_weather) + geom_point(aes(dep_time, precip, col = delay))
flight_weather %>%
ungroup() %>%
mutate(visib_cat = cut_interval(visib, n = 10)) %>%
group_by(visib_cat) %>%
summarise(dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot(aes(x = visib_cat, y = dep_delay)) +
geom_point()
ggplot(flight_weather) + geom_point(aes(dep_time, precip, col = delay)) + scale_fill_gradient2()
ggplot(flight_weather) + geom_point(aes(dep_time, precip, col = delay)) + scale_fill_gradient2(low = "green", high = "red", mid = "yellow")
ggplot(flight_weather) + geom_point(aes(dep_time, precip, fill = delay)) + scale_fill_gradient2(low = "green", high = "red", mid = "yellow")
ggplot(flight_weather) +
geom_dotplot(aes(dep_time, precip, fill = delay)) +
scale_fill_gradient2(low = "green", high = "red", mid = "yellow")
ggplot(flight_weather) +
geom_dotplot(aes(x = dep_time, y = precip, fill = delay)) +
scale_fill_gradient2(low = "green", high = "red", mid = "yellow")
ggplot(flight_weather) +
geom_jitter(aes(x = dep_time, y = precip, col = delay))
flight_weather %>%
ungroup() %>%
mutate(visib_cat = cut_interval(visib, n = 10)) %>%
group_by(visib_cat) %>%
summarise(dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot(aes(x = visib_cat, y = dep_time)) +
geom_point()
flights %>%
group_by(hour) %>%
filter(!is.na(dep_delay)) %>%
summarise( delay = mean( dep_delay > 0 , na.rm = T)) %>%
ggplot(aes(hour, delay, fill = delay)) + geom_col()
flights %>%
group_by(hour) %>%
summarize(m = mean(dep_delay, na.rm = TRUE),
sd = sd(dep_delay, na.rm = TRUE),
low_ci = m - 2*sd,
high_ci = m + 2*sd,
n = n()) %>%
ggplot(aes(hour, m, ymin = low_ci, ymax = high_ci)) +
geom_pointrange()
flights %>%
group_by(hour) %>%
filter(!is.na(dep_delay)) %>%
summarise( delay = mean( dep_delay, na.rm = T)) %>%
ggplot(aes(hour, delay, fill = delay)) + geom_col()
